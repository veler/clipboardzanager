<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:ClipboardZanager.ComponentModel.UI.Converters"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options">

    <converters:ActiveColorSetToSolidColorBrushConverter x:Key="ActiveColorSetToSolidColorBrushConverter" ColorName="SystemAccent"/>

    <Thickness x:Key="ContextMenuPadding" Bottom="4" Top="4"/>

    <Style x:Key="{x:Static SystemParameters.FocusVisualStyleKey}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="0" SnapsToDevicePixels="True" Stroke="{StaticResource VisualFocusBrush}" StrokeThickness="2" StrokeDashArray="1 0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Foreground" Value="{StaticResource DarkerForegroundBrush}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="AutomationProperties.HelpText" Value="{Binding Text, RelativeSource={RelativeSource Self}}"/>
    </Style>

    <Style TargetType="Button">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="TabIndex" Value="0"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Padding" Value="26, -3, 26, 0"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="ToolTip" Value="{x:Null}"/>
        <Setter Property="AutomationProperties.HelpText" Value="{Binding ToolTip, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding Content, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Grid>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                            <ContentPresenter Focusable="False" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontSize="{TemplateBinding FontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock" BasedOn="{x:Null}"/>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="{StaticResource ButtonIsHighlightedBorderBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ButtonIsHighlightedForeground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource ButtonIsPressedBackgroundBrush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource ButtonIsPressedBorderBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ButtonIsPressedForeground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ButtonIsDisabledForeground}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource ButtonIsDisabledBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="TabIndex" Value="0"/>
        <Setter Property="Background" Value="{StaticResource CheckBoxEnabledBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CheckBoxEnabledBorder}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Content" Value=""/>
        <Setter Property="AutomationProperties.Name" Value="{Binding Content, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid">
                                <Viewbox Margin="3" Stretch="Fill" Width="10" Height="10">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource CheckBoxEnabledGlyph}" Margin="1" Opacity="0" Stretch="None"/>
                                </Viewbox>
                                <Rectangle x:Name="indeterminateMark" Fill="{StaticResource CheckBoxEnabledGlyph}" Margin="3" Opacity="0"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontSize="{TemplateBinding FontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock" BasedOn="{x:Null}"/>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="10,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource CheckBoxMouseOverBackground}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource CheckBoxMouseOverBorder}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource CheckBoxMouseOverGlyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource CheckBoxMouseOverGlyph}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource CheckBoxDisabledBackground}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource CheckBoxDisabledBorder}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource CheckBoxDisabledGlyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource CheckBoxDisabledGlyph}"/>
                            <Setter Property="Foreground" Value="{StaticResource CheckBoxDisabledTextBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource CheckBoxPressedBackground}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource CheckBoxPressedBorder}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource CheckBoxPressedGlyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource CheckBoxPressedGlyph}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Chrome" SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <Grid>
                            <TextBlock x:Name="PlaceHolderTextBlock" Text="{TemplateBinding Content}" VerticalAlignment="Center" Padding="2,0,0,0"/>
                            <Grid HorizontalAlignment="Right" Width="20">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="3"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Path Grid.Column="1" Fill="{TemplateBinding BorderBrush}" HorizontalAlignment="Center" Margin="3,1,5,0" x:Name="Arrow" VerticalAlignment="Center">
                                    <Path.Data>
                                        <Geometry>M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z</Geometry>
                                    </Path.Data>
                                </Path>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBoxItem">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="TabIndex" Value="0"/>
        <Setter Property="Tag" Value="{DynamicResource {x:Static SystemParameters.HighContrastKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Padding" Value="4,3"/>
        <Setter Property="Background" Value="{StaticResource PopupBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ComboBoxEnabledBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter VerticalAlignment="Center" Margin="{TemplateBinding Padding}" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontSize="{TemplateBinding FontSize}">
                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock" BasedOn="{x:Null}"/>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource MenuItemIsHighlightedBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource MenuItemDisabledForeground}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource MenuItemIsHighlightedBackgroundBrush}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource MenuItemIsHighlightedBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource MenuItemDisabledForeground}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{Binding Converter={StaticResource ActiveColorSetToSolidColorBrushConverter}}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource MenuItemDisabledForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="TabIndex" Value="0"/>
        <Setter Property="Background" Value="{StaticResource ComboBoxEnabledBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ComboBoxEnabledBorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="false">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Popup Margin="1" AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Center" PopupAnimation="Slide" Grid.ColumnSpan="2">
                            <Border x:Name="DropDownBorder" Background="{TemplateBinding Background}" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}" BorderBrush="{DynamicResource ComboBoxEnabledBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <ScrollViewer Background="{StaticResource PopupBackground}" CanContentScroll="true">
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                        <ToggleButton Style="{StaticResource ComboBoxReadonlyToggleButton}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" Grid.Column="0" IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter Grid.Column="0" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontSize="{TemplateBinding FontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="4,3" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" VerticalAlignment="Center">
                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock" BasedOn="{x:Null}"/>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ComboBoxDisabledTextBrush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource ComboBoxFocusedBorderBrush}"/>
                            <Setter Property="Background" Value="{StaticResource ComboBoxOverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource ComboBoxFocusedBorderBrush}"/>
                            <Setter Property="Background" Value="{StaticResource ComboBoxOverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource ComboBoxOverBorderBrush}"/>
                            <Setter Property="Background" Value="{StaticResource ComboBoxOverBackground}"/>
                        </Trigger>
                        <Trigger Property="AreAnyTouchesOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource ComboBoxOverBorderBrush}"/>
                            <Setter Property="Background" Value="{StaticResource ComboBoxOverBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBoxItem">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="TabIndex" Value="0"/>
        <Setter Property="Margin" Value="0,0,20,0"/>
        <Setter Property="Tag" Value="{DynamicResource {x:Static SystemParameters.HighContrastKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter VerticalAlignment="Center" Margin="{TemplateBinding Padding}" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontSize="{TemplateBinding FontSize}">
                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock" BasedOn="{x:Null}"/>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource ListBoxItemMouseOverBackground}"/>
                            <Setter Property="Foreground" Value="{StaticResource IsHighlightedForegroundBrush}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource ListBoxItemMouseOverBackground}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource ListBoxItemMouseOverBackground}"/>
                            <Setter Property="Foreground" Value="{StaticResource IsHighlightedForegroundBrush}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{Binding Converter={StaticResource ActiveColorSetToSolidColorBrushConverter}}"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBox">
        <Setter Property="TabIndex" Value="0"/>
        <Setter Property="Background" Value="{StaticResource ListBoxEnabledBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ListBoxEnabledBorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                        <ScrollViewer Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource ListBoxFocusedBorderBrush}"/>
                            <Setter Property="Background" Value="{StaticResource ListBoxOverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource ListBoxFocusedBorderBrush}"/>
                            <Setter Property="Background" Value="{StaticResource ListBoxOverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource ListBoxOverBorderBrush}"/>
                            <Setter Property="Background" Value="{StaticResource ListBoxOverBackground}"/>
                        </Trigger>
                        <Trigger Property="AreAnyTouchesOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource ListBoxOverBorderBrush}"/>
                            <Setter Property="Background" Value="{StaticResource ListBoxOverBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToolTip" BasedOn="{StaticResource {x:Type ToolTip}}">
        <Setter Property="Background" Value="{StaticResource ToolTipBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ToolTipBorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="7"/>
    </Style>

    <Style TargetType="ContextMenu">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="HasDropShadow" Value="False"/>
        <Setter Property="Background" Value="{StaticResource PopupBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PopupBorder}"/>
        <Setter Property="Padding" Value="{StaticResource ContextMenuPadding}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border Uid="Border_93">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Uid="Border_50">
                            <ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" Uid="ScrollViewer_9">
                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Uid="ItemsPresenter_5"/>
                            </ScrollViewer>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="MenuItem">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="TabIndex" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding Content, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="AutomationProperties.HelpText" Value="{Binding ToolTip, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border Name="Border" Background="Transparent">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="32" SharedSizeGroup="Icon"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                                <ColumnDefinition Width="32"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Margin="4,5,4,5" Height="22" VerticalAlignment="Center" ContentSource="Icon" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontSize="{TemplateBinding FontSize}">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock" BasedOn="{x:Null}"/>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                            <ContentPresenter Grid.Column="1" Margin="0" ContentSource="Header" RecognizesAccessKey="True" VerticalAlignment="Center" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontSize="{TemplateBinding FontSize}">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock" BasedOn="{x:Null}"/>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                            <TextBlock Grid.Column="2" Grid.ColumnSpan="2" x:Name="InputGestureText" Text="{TemplateBinding InputGestureText}" Margin="5,5,10,5" DockPanel.Dock="Right"/>
                            <Popup Grid.Column="0" Grid.ColumnSpan="4" Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                                <Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{StaticResource PopupBackground}" BorderBrush="{StaticResource PopupBorder}" BorderThickness="1" Padding="{StaticResource ContextMenuPadding}">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuItemIsHighlightedBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource IsHighlightedForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource MenuItemDisabledForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Popup">
        <Setter Property="Placement" Value="Top"/>
        <Setter Property="VerticalOffset" Value="-5"/>
        <Setter Property="PopupAnimation" Value="Fade"/>
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
        <Setter Property="BorderBrush" Value="{StaticResource SeparatorBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Grid SnapsToDevicePixels="True">
                        <Rectangle Height="1" Margin="8,4,8,4" Fill="{TemplateBinding BorderBrush}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent"/>
                        <Border x:Name="Rectangle1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Background="{TemplateBinding Background}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto"/>
                            <Setter TargetName="Rectangle1" Property="Height" Value="7"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Foreground" Value="{StaticResource ScrollBarBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="4" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*"/>
                        </Grid.RowDefinitions>

                        <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{StaticResource ScrollThumbs}"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false"/>
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false"/>
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter Value="{StaticResource ScrollBarOverBrush}" TargetName="Thumb" Property="Background"/>
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter Value="{StaticResource ScrollBarDraggingBrush}" TargetName="Thumb" Property="Background"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto"/>
                            <Setter Property="Height" Value="12"/>
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal"/>
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand"/>
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IconButtonStyle" TargetType="Button">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="TabIndex" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource DarkerForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="Width" Value="48"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
        <Setter Property="ToolTip" Value="{x:Null}"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding ToolTip, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                            <ContentPresenter Focusable="False" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontSize="{TemplateBinding FontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock" BasedOn="{x:Null}"/>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource ButtonIsHighlightedBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ButtonIsHighlightedForeground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource ButtonIsPressedBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ButtonIsPressedForeground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ButtonIsDisabledForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HamburgerListBox" TargetType="ListBox">
        <Setter Property="TabIndex" Value="0"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0,4"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="True">
                        <ScrollViewer Focusable="False" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsItemsHost="True" Background="{x:Null}"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HamburgerMenuItemTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="PopupBackgroundBorderStyle" TargetType="Border">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="{StaticResource PopupBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PopupBorder}"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style x:Key="SettingsWindowContentStyle" TargetType="UserControl">
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Visibility" Value="Visible">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="30"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CircleEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PastBarListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="TabIndex" Value="0"/>
        <Setter Property="Margin" Value="0,0,20,0"/>
        <Setter Property="Tag" Value="{DynamicResource {x:Static SystemParameters.HighContrastKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="FirstBorder" BorderThickness="3">
                        <Border x:Name="SecondBorder" Margin="-1" BorderThickness="1">
                            <ContentPresenter />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="FirstBorder" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="SecondBorder" Property="BorderBrush" Value="{StaticResource PasteBarItemBorder}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="FirstBorder" Property="BorderBrush" Value="{StaticResource PasteBarItemIsHighContrastIsHighlightedBorder}"/>
                            <Setter TargetName="SecondBorder" Property="BorderBrush" Value="Transparent"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsFocused}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="FirstBorder" Property="BorderBrush" Value="{StaticResource PasteBarItemIsHighContrastIsHighlightedBorder}"/>
                            <Setter TargetName="SecondBorder" Property="BorderBrush" Value="Transparent"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="FirstBorder" Property="BorderBrush" Value="{StaticResource VisualFocusBrush}"/>
                            <Setter TargetName="SecondBorder" Property="BorderBrush" Value="Transparent"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsFocused}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="FirstBorder" Property="BorderBrush" Value="{StaticResource VisualFocusBrush}"/>
                            <Setter TargetName="SecondBorder" Property="BorderBrush" Value="Transparent"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
 
    <Style x:Key="PasteBarListBox" TargetType="ListBox">
        <Setter Property="TabIndex" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Horizontal" IsItemsHost="True" IsVirtualizing="True" VirtualizationMode="Recycling" IsVirtualizingWhenGrouping="True"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem" BasedOn="{StaticResource PastBarListBoxItemStyle}">
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PasteBarListBoxButton" TargetType="Button">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="TabIndex" Value="0"/>
        <Setter Property="Tag" Value="{DynamicResource {x:Static SystemParameters.HighContrastKey}}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource DarkerForegroundBrush}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Width" Value="48"/>
        <Setter Property="ToolTip" Value="{x:Null}"/>
        <Setter Property="AutomationProperties.HelpText" Value="{Binding ToolTip, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent">
                        <Grid Background="{TemplateBinding Background}">
                            <TextBlock Text="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center" Width="Auto"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Focusable" Value="False">
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource PasteBarItemMouseOverBackground}"/>
                            <Setter Property="Foreground" Value="{StaticResource PasteBarItemMouseOverForeground}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource PasteBarItemMouseOverBackground}"/>
                            <Setter Property="Foreground" Value="{StaticResource PasteBarItemMouseOverForeground}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource ButtonIsPressedBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ButtonIsPressedForeground}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ButtonIsDisabledForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PasteBarListBoxMoreInfoButton" TargetType="Button">
        <Setter Property="TabIndex" Value="0"/>
        <Setter Property="Tag" Value="{DynamicResource {x:Static SystemParameters.HighContrastKey}}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource PasteBarItemMoreInfoForeground}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Width" Value="48"/>
        <Setter Property="ToolTip" Value="{x:Null}"/>
        <Setter Property="AutomationProperties.HelpText" Value="{Binding ToolTip, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent">
                        <Grid Background="{TemplateBinding Background}">
                            <TextBlock Text="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center" Width="Auto"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Focusable" Value="False">
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource PasteBarItemMoreInfoButtonMouseOverBackground}"/>
                            <Setter Property="Foreground" Value="{StaticResource PasteBarItemMoreInfoButtonMouseOverForeground}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource PasteBarItemMoreInfoButtonMouseOverBackground}"/>
                        </MultiDataTrigger>
                        <EventTrigger RoutedEvent="MouseDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)" To="#33FFFFFF"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PasteBarItemFilesListBox" TargetType="ListBox">
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled" CanContentScroll="False" IsDeferredScrollingEnabled="True">
                        <ItemsPresenter Margin="10,5,10,5"/>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Vertical" IsItemsHost="True" IsVirtualizing="True" VirtualizationMode="Recycling" IsVirtualizingWhenGrouping="True"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Focusable" Value="False"/>
                    <Setter Property="IsTabStop" Value="False"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border HorizontalAlignment="Stretch">
                                    <TextBlock Text="{Binding}" Foreground="{StaticResource ForegroundBrush}" HorizontalAlignment="Center" TextTrimming="CharacterEllipsis" FontSize="20"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="PasteBarItemLinearGradentBorderBackground" EndPoint="0.5,1" StartPoint="0.5,0" PresentationOptions:Freeze="True">
        <GradientStop Color="#CC000000" Offset="1"/>
        <GradientStop Color="#00000000"/>
    </LinearGradientBrush>

    <DrawingBrush x:Key="PasteBarItemTiledImageBackground" Stretch="None" TileMode="Tile" Viewport="0,0,20,20" ViewportUnits="Absolute" PresentationOptions:Freeze="True">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="Transparent" PresentationOptions:Freeze="True">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="0,0,20,20" PresentationOptions:Freeze="True"/>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing Brush="{StaticResource PasteBarItemCheckerboard}" PresentationOptions:Freeze="True">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,0,10,10" PresentationOptions:Freeze="True"/>
                            <RectangleGeometry Rect="10,10,10,10" PresentationOptions:Freeze="True"/>
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

</ResourceDictionary>