<controls:BlurredWindow
        x:Name="blurredWindow"
        x:Class="ClipboardZanager.Views.FirstStartWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ClipboardZanager.Views"
        xmlns:controls="clr-namespace:ClipboardZanager.ComponentModel.UI.Controls"
        xmlns:viewModels="clr-namespace:ClipboardZanager.ViewModels"
        xmlns:converters="clr-namespace:ClipboardZanager.ComponentModel.UI.Converters"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ui="clr-namespace:ClipboardZanager.ComponentModel.UI"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
        mc:Ignorable="d"
        Title="{Binding Language.MainWindow.ApplicationTitle}"
        Height="600"
        Width="800"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen"
        IsBlurred="False"
        UseAccentColor="No"
        AutomationProperties.HelpText="{Binding Language.FirstStartWindow.WindowAutomationName}">
    <controls:BlurredWindow.Resources>
        <converters:ActiveColorSetToSolidColorBrushConverter x:Key="ActiveColorSetToSolidColorBrushConverter" ColorName="SystemAccent"/>
        <converters:BooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter" IsInverted="True" />
        <Storyboard x:Key="TutorialStoryboard" RepeatBehavior="Forever">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4.5" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:7" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:7.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:19" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:19.5" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:26" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:26.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:34" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:34.5" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:37" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:37.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="viewbox">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:9" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:9.5" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:11" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:13" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:24" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:27" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:29" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:33" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:37.5" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:38" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid1">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:14" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:14.5" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:22" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:22.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid2">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:7" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:7.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="viewbox">
                <EasingDoubleKeyFrame KeyTime="0:0:11" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:13" Value="-125">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:24" Value="-125"/>
                <EasingDoubleKeyFrame KeyTime="0:0:27" Value="27">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:29" Value="27"/>
                <EasingDoubleKeyFrame KeyTime="0:0:33" Value="48">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:37.5" Value="48"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:15" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:15.2" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:15.4" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:15.6" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:15.8" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:16" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="viewbox1">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:17" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:17.5" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:18" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:18.5" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="viewbox1">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:17" Value="-6"/>
                <EasingDoubleKeyFrame KeyTime="0:0:17.5" Value="-6"/>
                <EasingDoubleKeyFrame KeyTime="0:0:18" Value="35"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="viewbox">
                <EasingDoubleKeyFrame KeyTime="0:0:13" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:24" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:27" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:29" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:33" Value="171">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:37.5" Value="171"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </controls:BlurredWindow.Resources>
    <controls:BlurredWindow.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource TutorialStoryboard}"/>
        </EventTrigger>
    </controls:BlurredWindow.Triggers>
    <Window.DataContext>
        <viewModels:FirstStartWindowViewModel/>
    </Window.DataContext>

    <Grid x:Name="MainGrid" Background="{StaticResource BackgroundBrush}" FlowDirection="{Binding Language.FlowDirection}">
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="Loaded">
                <command:EventToCommand Command="{Binding LoadedCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                <command:EventToCommand Command="{Binding LocalLoadedCommand}"/>
            </i:EventTrigger>
            <i:EventTrigger EventName="Unloaded">
                <command:EventToCommand Command="{Binding UnloadedCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
            </i:EventTrigger>
        </i:Interaction.Triggers>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" VerticalAlignment="Top">
            <Border Background="Transparent" MouseLeftButtonDown="DragZoneGrid_OnMouseLeftButtonDown"/>
            <Button Style="{StaticResource IconButtonStyle}" 
                    ToolTip="{Binding Language.SettingsWindow.Close}" 
                    AutomationProperties.AcceleratorKey="{Binding Language.SettingsWindow.Close_AccessibilityKey}" 
                    AutomationProperties.HelpText="{Binding Language.SettingsWindow.Close_AccessibilityHelp}" 
                    Content="&#xE10A;" 
                    HorizontalAlignment="Right" 
                    VerticalAlignment="Top" 
                    IsCancel="True" 
                    Command="{Binding CloseButtonCommand}" 
                    CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" 
                    Margin="0,0,0,48" TabIndex="1"/>
        </Grid>
        <Grid Grid.Row="1">
            <controls:FlipView x:Name="FlipView" SelectedIndex="0">
                <Grid x:Name="LanguageTab">
                    <TextBlock Text="{Binding Language.FirstStartWindow.Welcome_Title}" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="32" TextWrapping="Wrap" Foreground="{DynamicResource ForegroundBrush}" FontFamily="Segoe UI Light" Focusable="{Binding IsScreenReaderRunning}"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock Text="{Binding Language.SettingsGeneralUserControl.Language}" VerticalAlignment="Center"/>
                        <TextBlock Text=" : " VerticalAlignment="Center"/>
                        <ComboBox Width="200" ItemsSource="{Binding AvailableLanguages, Mode=OneTime}" SelectedValue="{Binding CurrentLanguage, Mode=TwoWay}" AutomationProperties.Name="{Binding Language.SettingsGeneralUserControl.Language}" AutomationProperties.HelpText="{Binding Language.FirstStartWindow.SelectLanguage}" DisplayMemberPath="NativeName" SelectedValuePath="Name">
                            <ComboBox.ItemContainerStyle>
                                <Style TargetType="ComboBoxItem" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
                                    <Setter Property="AutomationProperties.Name" Value="{Binding NativeName}"/>
                                </Style>
                            </ComboBox.ItemContainerStyle>
                            <i:Interaction.Behaviors>
                                <ui:ForceTouchCaptureBehavior/>
                            </i:Interaction.Behaviors>
                        </ComboBox>
                    </StackPanel>
                </Grid>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <WrapPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top">
                        <TextBlock Text="{Binding Language.FirstStartWindow.WhatsNew_Title}" FontSize="32" TextWrapping="Wrap" Foreground="{DynamicResource ForegroundBrush}" FontFamily="Segoe UI Light" Focusable="{Binding IsScreenReaderRunning}"/>
                        <TextBlock Text=" " FontSize="32"/>
                        <TextBlock Text="{Binding ApplicationVersion}" FontSize="32" TextWrapping="Wrap" Foreground="{DynamicResource ForegroundBrush}" FontFamily="Segoe UI Light"/>
                    </WrapPanel>
                    <ScrollViewer Grid.Row="1" Margin="0,20,0,58" Width="350" IsTabStop="True" FocusVisualStyle="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}">
                        <i:Interaction.Behaviors>
                            <ui:ForceTouchCaptureBehavior/>
                        </i:Interaction.Behaviors>
                        <ItemsControl ItemsSource="{Binding News}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="0,0,0,20">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="48"/>
                                            <ColumnDefinition Width="1*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Foreground="{StaticResource ForegroundBrush}" Text="{Binding Icon}" FontFamily="Segoe MDL2 Assets" FontSize="24"/>
                                        <StackPanel Grid.Column="1">
                                            <TextBlock Foreground="{StaticResource ForegroundBrush}" TextWrapping="Wrap" Text="{Binding Title}" Focusable="{Binding DataContext.IsScreenReaderRunning, ElementName=blurredWindow}"/>
                                            <TextBlock TextWrapping="Wrap" Text="{Binding Description}" Focusable="{Binding DataContext.IsScreenReaderRunning, ElementName=blurredWindow}"/>
                                        </StackPanel>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </Grid>
                <Grid x:Name="IgnoredAppTab">
                    <TextBlock Text="{Binding Language.FirstStartWindow.Security_Title}" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="32" TextWrapping="Wrap" Foreground="{DynamicResource ForegroundBrush}" FontFamily="Segoe UI Light" Focusable="{Binding IsScreenReaderRunning}"/>
                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" Width="500">
                        <TextBlock Text="{Binding Language.FirstStartWindow.Security_Description}" VerticalAlignment="Center" TextWrapping="Wrap" Focusable="{Binding IsScreenReaderRunning}"/>
                        <StackPanel Orientation="Horizontal" Margin="0,20,0,0">
                            <TextBlock Text="{Binding Language.SettingsSecurityUserControl.IgnoreFromApps}" VerticalAlignment="Center"/>
                            <TextBlock Text=" : " VerticalAlignment="Center"/>
                        </StackPanel>
                        <ListBox x:Name="IngoredApplicationList" ItemsSource="{Binding IgnoredApplications, Mode=OneWay}" Height="150" Margin="0,10,0,0" SelectedIndex="0" AutomationProperties.Name="{Binding Language.SettingsSecurityUserControl.IgnoreFromApps}">
                            <ListBox.InputBindings>
                                <KeyBinding Key="Delete" Command="{Binding DeleteIgnoredApplicationCommand}" CommandParameter="{Binding SelectedValue, ElementName=IngoredApplicationList}" />
                            </ListBox.InputBindings>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                    <Setter Property="AutomationProperties.Name" Value="{Binding DisplayName}"/>
                                    <Setter Property="AutomationProperties.HelpText" Value="{Binding DataContext.Language.SettingsSecurityUserControl.IgnoreFromApps_DeleteHelpText, ElementName=MainGrid}"/>
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid Height="32">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1*"/>
                                            <ColumnDefinition Width="32"/>
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Grid.Column="0" Orientation="Horizontal">
                                            <Image Source="{Binding DisplayedIcon}" Margin="10,0,0,0"/>
                                            <TextBlock Text="{Binding DisplayName}" Margin="10,0,10,0" VerticalAlignment="Center" TextTrimming="CharacterEllipsis"/>
                                        </StackPanel>
                                        <Button Grid.Column="1" IsTabStop="False" ToolTip="{Binding DataContext.Language.SettingsSecurityUserControl.IgnoreFromApps_Delete, ElementName=MainGrid}" Content="&#xE74D;" Style="{StaticResource PasteBarListBoxButton}" Height="32" Width="32" Command="{Binding DataContext.DeleteIgnoredApplicationCommand, ElementName=MainGrid}" CommandParameter="{Binding}">
                                            <i:Interaction.Behaviors>
                                                <ui:ForceTouchCaptureBehavior/>
                                            </i:Interaction.Behaviors>
                                        </Button>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                            <TextBlock Text="{Binding Language.SettingsSecurityUserControl.AddIgnoreFromApps}" VerticalAlignment="Center"/>
                            <TextBlock Text=" : " VerticalAlignment="Center"/>
                            <ComboBox x:Name="AddWindowToIgnoreListComboBox" Width="200" ItemsSource="{Binding WindowsList, Mode=OneWay}" AutomationProperties.Name="{Binding Language.SettingsSecurityUserControl.AddIgnoreFromApps}">
                                <i:Interaction.Behaviors>
                                    <ui:ForceTouchCaptureBehavior/>
                                </i:Interaction.Behaviors>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding AddWindowToIgnoreListCommand}" CommandParameter="{Binding SelectedValue, ElementName=AddWindowToIgnoreListComboBox}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <ComboBox.ItemContainerStyle>
                                    <Style TargetType="ComboBoxItem" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
                                        <Setter Property="AutomationProperties.Name" Value="{Binding Title}"/>
                                    </Style>
                                </ComboBox.ItemContainerStyle>
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="{Binding Icon}" Margin="10,0,0,0"/>
                                            <TextBlock Text="{Binding Title}" Margin="10,0,10,0" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </StackPanel>
                    </StackPanel>
                </Grid>
                <Grid x:Name="SynchronizationTab">
                    <TextBlock Text="{Binding Language.FirstStartWindow.Synchronization_Title}" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="32" TextWrapping="Wrap" Foreground="{DynamicResource ForegroundBrush}" FontFamily="Segoe UI Light" Focusable="{Binding IsScreenReaderRunning}"/>
                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" Width="500">
                        <TextBlock Text="{Binding Language.FirstStartWindow.Synchronization_Description}" VerticalAlignment="Center" TextWrapping="Wrap" Focusable="{Binding IsScreenReaderRunning}"/>
                        <Image Source="/ClipboardZanager;component/Assets/access_settings.jpg" Width="350" Margin="0,20,0,0"/>
                    </StackPanel>
                </Grid>
                <Grid x:Name="TutorialTab">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Text="{Binding Language.FirstStartWindow.HowToPaste_Title}" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="32" TextWrapping="Wrap" Foreground="{DynamicResource ForegroundBrush}" FontFamily="Segoe UI Light" Focusable="{Binding IsScreenReaderRunning}" AutomationProperties.Name="{Binding Language.FirstStartWindow.HowToPaste_TitleHelpText}"/>
                    <Grid Grid.Row="1" Margin="0,20,0,0" Height="250" Width="600" VerticalAlignment="Top" HorizontalAlignment="Center">
                        <Grid Height="24" Margin="10,0,230,52" VerticalAlignment="Bottom">
                            <Rectangle Fill="{Binding Converter={StaticResource ActiveColorSetToSolidColorBrushConverter}}"/>
                            <Image Source="/ClipboardZanager;component/Assets/paste.ico" HorizontalAlignment="Right" Width="16" Margin="0,4,5,4"/>
                        </Grid>
                        <Grid x:Name="grid" Height="65" Margin="10,10,230,0" VerticalAlignment="Top">
                            <Rectangle Fill="{Binding Converter={StaticResource ActiveColorSetToSolidColorBrushConverter}}"/>
                            <Rectangle Stroke="White" HorizontalAlignment="Left" Width="40" Margin="14,14,0,11"/>
                            <Rectangle Stroke="White" HorizontalAlignment="Left" Width="40" Margin="65,14,0,11"/>
                            <Rectangle Stroke="White" HorizontalAlignment="Left" Width="40" Margin="115,14,0,11"/>
                        </Grid>
                        <Viewbox HorizontalAlignment="Left" Width="400">
                            <Canvas Width="100" Height="65">
                                <Path Data="F 1 M 60.6,63.2 L 38.8,63.2 43.3,58.9 56.1,58.9 Z" Fill="{StaticResource DarkerForegroundBrush}"/>
                                <Path Data="F 1 M 1.5,0 C 0.7,0 0,0.7 0,1.5 L 0,55.9 C 0,56.7 0.7,57.4 1.5,57.4 L 97.8,57.4 C 98.6,57.4 99.3,56.7 99.3,55.9 L 99.3,1.5 C 99.3,0.7 98.6,0 97.8,0 L 1.5,0 Z M 49.7,55.3 C 49.1,55.3 48.6,54.8 48.6,54.2 48.6,53.6 49.1,53.1 49.7,53.1 50.3,53.1 50.8,53.6 50.8,54.2 50.8,54.8 50.3,55.3 49.7,55.3 Z M 95.7,49.8 C 95.7,50.6 95,51.3 94.2,51.3 L 5.1,51.3 C 4.3,51.3 3.6,50.6 3.6,49.8 L 3.6,5 C 3.6,4.2 4.3,3.5 5.1,3.5 L 94.2,3.5 C 95,3.5 95.7,4.2 95.7,5 L 95.7,49.8 Z" Fill="{StaticResource DarkerForegroundBrush}"/>
                            </Canvas>
                        </Viewbox>
                        <Viewbox x:Name="viewbox" Height="50" Width="50" HorizontalAlignment="Left" Margin="169,124,0,76" d:LayoutOverrides="Width" RenderTransformOrigin="0.5,0.5">
                            <Viewbox.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Viewbox.RenderTransform>
                            <Canvas Height="90" Width="80">
                                <Path Data="F 1 M 39.44,54.097 L 47.866,70.601 50.894,69.054 42.513,52.638 56.812,51.263 26.854,24.483 29.478,64.583 Z" Fill="#ffffff"/>
                            </Canvas>
                        </Viewbox>
                        <Grid x:Name="grid1" HorizontalAlignment="Right" Margin="0,90,35.75,90" Width="85">
                            <Rectangle x:Name="rectangle" HorizontalAlignment="Left" Margin="30.418,12.333,0,0" Width="9.082" Height="17.084" VerticalAlignment="Top" RadiusX="5" Fill="{Binding Converter={StaticResource ActiveColorSetToSolidColorBrushConverter}}" RadiusY="5"/>
                            <Viewbox Height="70" Margin="0,0,15,0" VerticalAlignment="Center" d:LayoutOverrides="TopMargin, BottomMargin">
                                <Canvas Width="100" Height="100">
                                    <Path Data="F 1 M 50,7 C 34.5053,7 22,19.5053 22,35 L 22,65 C 22,80.4947 34.5053,93 50,93 65.4947,93 78,80.4947 78,65 L 78,35 C 78,19.5053 65.4947,7 50,7 Z M 48.6563,9.03125 C 48.77,9.02554 48.8859,9.03552 49,9.03125 L 49,17.0938 C 45.6118,17.5805 43,20.479 43,24 L 43,36 C 43,39.8607 46.1393,43 50,43 53.8607,43 57,39.8607 57,36 L 57,24 C 57,20.479 54.3882,17.5805 51,17.0938 L 51,9.03125 C 64.9521,9.55275 76,20.9141 76,35 L 76,65 C 76,79.4213 64.4213,91 50,91 35.5787,91 24,79.4213 24,65 L 24,35 C 24,21.0294 34.866,9.72404 48.6563,9.03125 Z M 50,19 C 52.7873,19 55,21.2127 55,24 L 55,36 C 55,38.7873 52.7873,41 50,41 47.2127,41 45,38.7873 45,36 L 45,24 C 45,21.2127 47.2127,19 50,19 Z" Fill="{StaticResource DarkerForegroundBrush}" />
                                </Canvas>
                            </Viewbox>
                            <Viewbox x:Name="viewbox1" HorizontalAlignment="Right" Width="15" Margin="0,6,0,0" VerticalAlignment="Top" Height="29" RenderTransformOrigin="0.5,0.5">
                                <Viewbox.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Viewbox.RenderTransform>
                                <Canvas Height="16" Width="8">
                                    <Path Data="F 1 M 3,0 L 3,13 0,10 0,12 4,16 8,12 8,10 5,13 5,0 3,0 Z" Fill="{Binding Converter={StaticResource ActiveColorSetToSolidColorBrushConverter}}"/>
                                </Canvas>
                            </Viewbox>
                        </Grid>
                        <Grid x:Name="grid2" HorizontalAlignment="Right" Margin="0,103,0,102" Width="137">
                            <Rectangle Stroke="{StaticResource DarkerForegroundBrush}" RadiusX="10" RadiusY="10" HorizontalAlignment="Left" Width="45"/>
                            <Rectangle Stroke="{StaticResource DarkerForegroundBrush}" RadiusX="10" RadiusY="10" HorizontalAlignment="Right" Width="45"/>
                            <TextBlock Text="Alt" Foreground="White" HorizontalAlignment="Left" Margin="13,12.25,0,12.8" d:LayoutOverrides="Height"/>
                            <TextBlock Text="+" Foreground="White" Margin="62.384,12.25,64.356,12.8" d:LayoutOverrides="Width, Height"/>
                            <TextBlock Text="V" Foreground="White" HorizontalAlignment="Right" Margin="0,12.25,17.106,12.8" d:LayoutOverrides="Height"/>
                        </Grid>
                    </Grid>
                    <Button Grid.Row="2" Content="{Binding Language.FirstStartWindow.HowToPaste_Use}" HorizontalAlignment="Center" Margin="0,0,0,58" Command="{Binding CloseButtonCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                        <i:Interaction.Behaviors>
                            <ui:ForceTouchCaptureBehavior/>
                        </i:Interaction.Behaviors>
                    </Button>
                </Grid>
            </controls:FlipView>
            <controls:FlipViewIndicator FlipView="{Binding ElementName=FlipView}" Visibility="{Binding IsMigrationRequired, Converter={StaticResource InvertedBooleanToVisibilityConverter}}" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,0,20"/>
            <StackPanel VerticalAlignment="Bottom">
                <TextBlock Text="{Binding MigrationStatus}" FontSize="12" Margin="20,0,17,2" TextTrimming="CharacterEllipsis"/>
                <ProgressBar Value="{Binding MigrationProgress}" Foreground="White" BorderBrush="{x:Null}" Background="{x:Null}" Height="5"/>
            </StackPanel>
        </Grid>
    </Grid>
</controls:BlurredWindow>
