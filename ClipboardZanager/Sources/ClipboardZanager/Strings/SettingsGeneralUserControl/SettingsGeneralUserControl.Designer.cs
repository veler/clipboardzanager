//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClipboardZanager.Strings.SettingsGeneralUserControl {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SettingsGeneralUserControl {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SettingsGeneralUserControl() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ClipboardZanager.Strings.SettingsGeneralUserControl.SettingsGeneralUserControl", typeof(SettingsGeneralUserControl).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the keyboard shortcut.
        /// </summary>
        internal static string ChangeHotKey {
            get {
                return ResourceManager.GetString("ChangeHotKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close the paste bar when the mouse moves away.
        /// </summary>
        internal static string ClosePasteBarWhenMouseIsAway {
            get {
                return ResourceManager.GetString("ClosePasteBarWhenMouseIsAway", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close with the keyboard shortcut.
        /// </summary>
        internal static string ClosePasteBarWithHotKey {
            get {
                return ResourceManager.GetString("ClosePasteBarWithHotKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current keyboard shortcut.
        /// </summary>
        internal static string CurrentHotKey {
            get {
                return ResourceManager.GetString("CurrentHotKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open with a keyboard shortcut.
        /// </summary>
        internal static string HotKey {
            get {
                return ResourceManager.GetString("HotKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accept this shortcut.
        /// </summary>
        internal static string HotKeyPopup_Accept {
            get {
                return ResourceManager.GetString("HotKeyPopup_Accept", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this popup to change the keyboard shortcut..
        /// </summary>
        internal static string HotKeyPopup_Description1 {
            get {
                return ResourceManager.GetString("HotKeyPopup_Description1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Try your new keyboard shortcut by typing on the keys you want to use, one by one :.
        /// </summary>
        internal static string HotKeyPopup_Description2 {
            get {
                return ResourceManager.GetString("HotKeyPopup_Description2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tab, Enter and Space keys are forbidden..
        /// </summary>
        internal static string HotKeyPopup_Description3 {
            get {
                return ResourceManager.GetString("HotKeyPopup_Description3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press Enter to start to record the new keyboard shortcut then press the keys of the new shortcut, one by one. The Tab, Space and Enter key are forbidden. Press Enter to accept the new shortcut or Escape to cancel..
        /// </summary>
        internal static string HotKeyPopupHelpText {
            get {
                return ResourceManager.GetString("HotKeyPopupHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        internal static string Language {
            get {
                return ResourceManager.GetString("Language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open the paste bar with a mouse gesture.
        /// </summary>
        internal static string MouseGesture {
            get {
                return ResourceManager.GetString("MouseGesture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This option will open the paste bar with a mouse gesture. When the paste bar position is set to top, put the mouse at the top of the screen, then scroll down. When the paste bar position is set to bottom, put the mouse at the bottom of the screen, then scroll top..
        /// </summary>
        internal static string MouseGesture_Description {
            get {
                return ResourceManager.GetString("MouseGesture_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paste bar position on the screen.
        /// </summary>
        internal static string PasteBarPosition {
            get {
                return ResourceManager.GetString("PasteBarPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bottom of the screen.
        /// </summary>
        internal static string PasteBarPosition_Bottom {
            get {
                return ResourceManager.GetString("PasteBarPosition_Bottom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Top of the screen.
        /// </summary>
        internal static string PasteBarPosition_Top {
            get {
                return ResourceManager.GetString("PasteBarPosition_Top", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore default settings.
        /// </summary>
        internal static string RestoreDefault {
            get {
                return ResourceManager.GetString("RestoreDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm.
        /// </summary>
        internal static string RestoreDefault_Confirm {
            get {
                return ResourceManager.GetString("RestoreDefault_Confirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure to restore the software ot its default values? The application will stop to synchronize your data..
        /// </summary>
        internal static string RestoreDefault_Confirmation {
            get {
                return ResourceManager.GetString("RestoreDefault_Confirmation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start automatically when I sign in to Windows.
        /// </summary>
        internal static string StartWithWindows {
            get {
                return ResourceManager.GetString("StartWithWindows", resourceCulture);
            }
        }
    }
}
